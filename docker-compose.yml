services:
  app:
    build: .
    image: app-image
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 1s
      timeout: 1s
      retries: 2

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 1s
      retries: 2

  celery:
    image: app-image
    command: ["celery", "-A", "a_core", "worker", "-E", "-l", "info"]
    ports:
      - 6900:6900
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  redis_data:
